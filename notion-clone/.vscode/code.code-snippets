{
  // Place your notion-clone workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Render Element": {
    "prefix": "renderElement",
    "body": [
      "import React from \"react\";",
      "import { Element, Node } from \"slate\";",
      "import { RenderElementProps } from \"slate-react\";",
      "",
      "type ${1:Element} = {",
      "  type: \"${2:type}\";",
      "  children: Node[];",
      "};",
      "",
      "const is${1:Element} = (ele: Element): ele is ${1:Element} => {",
      "  return ele.type === \"${2:type}\";",
      "};",
      "",
      "export const ${1:Element} = ({",
      "  element,",
      "  children,",
      "  attributes,",
      "}: RenderElementProps) => {",
      "  if (!is${1:Element}(element)) {",
      "    throw new Error(\"The element is not of type ${2:type} Element\");",
      "  }",
      "",
      "  return (",
      "    <div {...attributes} className=\"\">",
      "      {children}",
      "    </div>",
      "  );",
      "};",
      ""
    ],
    "description": "Render Element"
  }
}
